package hello;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.ui.Model;

import java.util.List;
import java.util.ArrayList;

import hello.Patient;
import hello.PatientRepository;
import hello.EGFR;
import hello.EGFRRepository;
import hello.ACR;
import hello.ACRRepository;

@Controller    // This means that this class is a Controller
// @RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private PatientRepository patientRepository;
	private EGFRRepository egfrRepository;
	private ACRRepository acrRepository;

	@GetMapping("/home")
    public String home(Model model) {
    	List<Patient> patients = new ArrayList<>();
	    patientRepository.findAll().forEach(patients::add);
	    model.addAttribute("patients", patients);
	    // Patient patient = patients.get(0);
	    // model.addAttribute("name", patient.getName());
	    // model.addAttribute("gender", patient.getGender());
	    // model.addAttribute("age", patient.getAge());
	    // model.addAttribute("name", "Jane");
	    // model.addAttribute("gender", "F");
	    // model.addAttribute("age", 23);

        return "home";
    }

    @GetMapping("/individual")
    public String individual(Model model) {
        return "individual";
    }

    @GetMapping("/population")
    public String population(Model model) {
        return "population";
    }

    @GetMapping("/mkck")
    public String mkck(Model model) {
        return "mkck";
    }

    @GetMapping("/work")
    public String work(Model model) {
        return "work";
    }

	@GetMapping("/patients")
    public @ResponseBody Iterable<Patient> getAllPatients() {
		return patientRepository.findAll();
	}

	// @GetMapping("/patients/{id}")
	// public Patient getPatientById(@PathVariable(value = "id") Long patientId) {
	//     return patientRepository.findById(patientId);
	// }

	@GetMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewPatient (@RequestParam String name
			, @RequestParam String gender, @RequestParam Integer age) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		Patient n = new Patient();
		n.setName(name);
		n.setGender(gender);
		n.setAge(age);
		patientRepository.save(n);
		return "Saved";
	}

	// @GetMapping(path="/all")
	// public @ResponseBody Iterable<User> getAllUsers() {
	// 	// This returns a JSON or XML with the users
	// 	return userRepository.findAll();
	// }
}